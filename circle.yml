version: 2.1
orbs:
  codecov: codecov/codecov@4.0.1

jobs:
  build:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - checkout
      - run:
          name: "Install Dependencies and Compile"
          command: |
            echo "Installing dependencies and compiling with Maven"
            mvn compile 
            mvn clean
      - run:
          name: "Checkstyle Analysis"
          command: |
            echo "Running Checkstyle"
            mvn checkstyle:check
      - store_artifacts:
          path: target/checkstyle-result.xml
          destination: checkstyle-report
  test:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - checkout
      - run:
          name: "Run Tests and Generate Coverage Report"
          command: |
            echo "Running tests with Maven"
            mvn verify
  upload-coverage:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - checkout
      - run:
          name: "Upload Coverage Report to Codecov"
          command: bash <(curl -s https://codecov.io/bash)
      - codecov/upload:
          file: ./target/site/jacoco/jacoco.xml
          token: CODECOV_TOKEN
publish-javadoc:
  docker:
    - image: cimg/openjdk:17.0
  steps:
    - checkout
    - run:
        name: "Configure Git User"
        command: |
          git config --global user.email "mustapha.genouiz@etudiant-fst.utm.tn"
          git config --global user.name "Mustapha-Kdb"
    - run:
        name: "Publish Javadoc to GitHub Pages"
        command: |
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/Mustapha-Kdb/ceri-m1-techniques-de-test.git
          git clone $CIRCLE_REPOSITORY_URL temp
          cd temp
          git checkout gh-pages || git checkout --orphan gh-pages
          git rm -rf .
          cp -R ../target/site/apidocs/* .
          git add .
          git commit -m "Publish Javadoc [skip ci]"
          git push origin gh-pages


workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
      - upload-coverage:
          requires:
            - test
      - publish-javadoc:
          requires:
            - upload-coverage